/*!
 * github.js - v0.0.1
 * Copyright (c) 2015-2015 Akshay Sharma  <sharmakumar3092@gmail.com>
 */
var GitHub=function(){var a={},b={userProfileTpl:'<div class="gt-usr-header gt-shadow"><div class="gt-usr-avatar"><a target="_blank" href="<%= html_url%>"><div class="gt-usr-img" style="background-image: url(<%= avatar_url%>)"> </div></a></div><div class="gt-usr-name"><span class="user-name"><%= name%></span><a target="_blank" href="<%= html_url%>"><span class="user-login"><%= login%></span></a></div><div class="gt-usr-details"><div class="gt-usr-repo"><a target="_blank" href="<%= html_url%>"><span class="gt-usr-txt"><%= public_repos%></span><span class="gt-usr-dt">Repositories</span></a></div><div class="gt-usr-folwr"><a target="_blank" href="<%= html_url + "/followers"%>"><span class="gt-usr-txt"><%= followers%></span><span class="gt-usr-dt">Followers</span></a></div><div class="gt-usr-folng"><a target="_blank" href="<%= html_url + "/following"%>"><span class="gt-usr-txt"><%= following%></span><span class="gt-usr-dt">Following</span></a></div></div></div>',repoProfileTpl:'<div class="gt-usr-header gt-shadow"><div class="gt-usr-name"><span class="user-name"><%= name%></span><a target="_blank" href="<%= owner.html_url%>"><span class="user-login"><%= owner.login%></span></a><p><%= description%></p></div><div class="gt-usr-details"><div class="gt-usr-repo"><a target="_blank" href="<%= html_url%>"><span class="gt-usr-txt"><%= stargazers_count%></span><span class="gt-usr-dt">Stars</span></a></div><div class="gt-usr-folwr"><a target="_blank" href="<%= html_url %>"><span class="gt-usr-txt"><%= subscribers_count%></span><span class="gt-usr-dt">Watchers</span></a></div><div class="gt-usr-folng"><a target="_blank" href="<%= html_url %>"><span class="gt-usr-txt"><%= forks_count%></span><span class="gt-usr-dt">Forks</span></a></div></div></div>',orgProfileTpl:'<div class="gt-org-header gt-shadow"><div class="gt-org-avatar"><a target="_blank" href="<%= html_url%>"><div class="gt-org-img" style="background-image: url(<%= avatar_url%>)"> </div></a></div><div class="gt-org-name"><span class="user-name"><%= name%></span><%if(blog){%><a target="_blank" href="<%= blog%>" class="gt-org-link"><span class="user-login">Website</span></a><%}%><%if(email){%><a target="_blank" href="mailto:<%= email%>" class="gt-org-link"><span class="user-login">Email</span></a><%}%><br><span class="gt-org-repos"><%= public_repos%></span><span class="gt-org-repos"> Public Repositories</span></div></div>',gitActivityTpl:'<div class="gt-activity <%=type%>"><div class="gt-avatar-cnt"><a target="_blank" href="https://github.com/<%= actor.login%>"><img src="<%=actor.avatar_url%>" class="gt-usr-avatar"></a></div><div class="gt-act-cnt"><%= userLink%><%= message%></div><div title="<%= created_at%>" class="gt-time-cnt"><div class="gt-time-str"><%= timeString%></div></div><div class="gt-clearfix"></div></div>',CommitCommentEvent:"<span> commented on commit <%= commentLink%> </span><p><%= payload.comment.body%></p>",CreateEvent:"<span> created <%= payload.ref_type%> <%= branchLink%> at <%= repoLink%> </span>",DeleteEvent:"<span> deleted <%= payload.ref%> <%= payload.ref_type%> at <%= repoLink%> </span>",ForkEvent:"<span> forked <%= repoLink%> to <%= forkLink%> </span>",GollumEvent:"<span> <%= actionType%> the <%= repoLink%> wiki</span><p><%= wikiMessage%></p>",IssueCommentEvent:"<span> commented on issue <%= commentLink%> </span><p><%= payload.comment.body%></p>",IssuesEvent:"<span> <%= payload.action%> issue <%= issueUrl%> </span>",MemberEvent:"<span> added <%= memberLink%> to <%= repoLink%> </span>",PublicEvent:"<span> open sourced <%= repoLink%> </span>",PullRequestEvent:'<span> <%= payload.action%> pull request <%= mergeRequestUrl%> </span><p><%= payload.pull_request.title%></p><p class="pull-req-info"><%= payload.pull_request.commits%><%if(payload.pull_request.commits > 1){%> commits <%}else{%> commit <%}%> with <%= payload.pull_request.changed_files%> <%if(payload.pull_request.commits > 1){%> files <%}else{%> file <%}%> changed.</p>',PullRequestReviewCommentEvent:"<span> commented on pull request <%= pullCommentUrl%> </span><p><%= payload.comment.body%></p>",PushEvent:"<span> pushed to <%= branchLink%> at <%= repoLink%> </span><%= commitsHtml%>",ReleaseEvent:"<span> released <%= tagLink%> at <%= repoLink%> </span><br><%= zipLink%>",WatchEvent:"<span> starred <%= repoLink%> </span>",noActivityTpl:'<div class="gt-no-activity"><span> There are no public events for this account in past 90 days. </span></div>'},c={checkInteger:function(a){return a===parseInt(a,10)?!0:!1},getRenderedHTML:function(a,b){return _.template(a)(b)},getUserProfileHTML:function(a){return c.getRenderedHTML(b.userProfileTpl,a)},getRepoProfileHTML:function(a){return c.getRenderedHTML(b.repoProfileTpl,a)},getOrgProfileHTML:function(a){return c.getRenderedHTML(b.orgProfileTpl,a)},getPublicActivityHTML:function(a){var d='<div class="gt-activity-cnt gt-scrollbar">',e=c.activityLimit<a.length?c.activityLimit:a.length;if(0==e)d+=c.getRenderedHTML(b.noActivityTpl,{});else for(var f=0;e>f;f++){var g=a[f],h=g.payload;switch(g.timeString=c.millisecondsToStr(new Date-new Date(g.created_at)),g.userLink=c.getGitHubLink(g.actor.login,g.actor.login),g.repoLink=c.getGitHubLink(g.repo.name,g.repo.name),g.branchLink="",h.ref&&(g.branch="refs/heads/"===h.ref.substring(0,11)?h.ref.substring(11):h.ref,g.branchLink=c.getGitHubLink(g.repo.name+"/tree/"+g.branch,g.branch)),g.type){case"CommitCommentEvent":g.commentLink=c.getLink(h.comment.html_url,g.repo.name+"@"+h.comment.commit_id.substring(0,6));break;case"CreateEvent":break;case"DeleteEvent":break;case"ForkEvent":g.forkLink=c.getGitHubLink(h.forkee.html_url,h.forkee.full_name);break;case"GollumEvent":var i=h.pages[0];g.actionType=i.action,g.wikiMessage=g.actionType.charAt(0).toUpperCase()+g.actionType.slice(1)+" ",g.wikiMessage+=c.getLink(i.html_url,i.title);break;case"IssueCommentEvent":g.commentLink=c.getLink(h.comment.html_url,g.repo.name+"#"+h.issue.number);break;case"IssuesEvent":g.issueUrl=c.getLink(h.issue.html_url,g.repo.name+"#"+h.issue.number);break;case"MemberEvent":g.memberLink=c.getGitHubLink(h.member.login,h.member.login);break;case"PublicEvent":break;case"PullRequestEvent":g.mergeRequestUrl=c.getLink(h.pull_request.html_url,g.repo.name+"#"+h.pull_request.number);break;case"PullRequestReviewCommentEvent":g.pullCommentUrl=c.getLink(h.comment.html_url,g.repo.name+"#"+h.pull_request.number);break;case"PushEvent":g.commitsHtml=c.getCommitsHTML(g);break;case"ReleaseEvent":g.tagLink=c.getLink(h.release.html_url,h.release.tag_name),g.zipLink=c.getLink(h.release.zipball_url,"Download Source Code (zip)");break;case"WatchEvent":}g.message=c.getRenderedHTML(b[g.type],g),d+=c.getRenderedHTML(b.gitActivityTpl,g)}return d+="</div>"},getCommitsHTML:function(a){var b,d,e,f,g,h='<ul class="gt-commit-list">',i="",j=a.payload,k=j.commits.length,l=j.before+"..."+j.head;for(g=0;k>g&&!(g>1);g++)f=j.commits[g],b='<li class="gt-commit-item" >',d=c.getGitHubLink(a.repo.name+"/commit/"+f.sha,f.sha.substring(0,6)),e='<span class="gt-commit-msg">'+f.message.substring(0,150)+"</span>",b+=d,b+=e,b+="</li>",h+=b;return 2===k?i=c.getGitHubLink(a.repo.name+"/compare/"+l,"View comparison for these 2 commits &raquo;","gt-compare-link"):k>2&&(i=c.getGitHubLink(a.repo.name+"/compare/"+l,k-2+" more "+c.getPluralWord(k-2,"commit")+" &raquo;","gt-compare-link")),h+="</ul>",h+=i},getData:function(a,b){var c,d,e;return e=new XMLHttpRequest,e.open("GET",a,!1),e.onload=function(){return e.status>=200&&e.status<400?(d=JSON.parse(e.responseText),void(c=b(d))):!1},e.onerror=function(){console.log("An error occurred while connecting to GitHub API.")},e.send(),c},getLink:function(a,b,d){return b||(b=a),"undefined"==typeof d&&(d=""),c.getRenderedHTML('<a class="'+d+'" href="<%=url%>" target="_blank"><%=title%></a>',{url:a,title:b})},getGitHubLink:function(a,b,d){return b||(b=a),"undefined"==typeof d&&(d=""),c.getLink("https://github.com/"+a,b,d)},getPluralWord:function(a,b){return 1!==a?b+"s":b},millisecondsToStr:function(a){function b(a){return a>1?"s ago":" ago"}var c=Math.floor(a/1e3),d=Math.floor(c/31536e3);if(d)return d+" year"+b(d);var e=Math.floor((c%=31536e3)/2592e3);if(e)return e+" month"+b(e);var f=Math.floor((c%=2592e3)/86400);if(f)return f+" day"+b(f);var g=Math.floor((c%=86400)/3600);if(g)return"about "+g+" hour"+b(g);var h=Math.floor((c%=3600)/60);if(h)return h+" minute"+b(h);var i=c%60;return i?i+" second"+b(i):"just now"},renderContent:function(a,b){var c=document.getElementsByClassName(b);if(a='<div class="gt-container">'+a+"</div>",c instanceof HTMLCollection)for(var d=0;d<c.length;d++)c[d].innerHTML=a,c[d].style.position="relative"}};return a.userProfile=function(a){if(!a.username||!a.classname)return!1;var b=a.classname,d="https://api.github.com/users/"+a.username,e="",f=c.getData(d,c.getUserProfileHTML);e=f,c.renderContent(e,b)},a.repoProfile=function(a){if(!a.username||!a.classname||!a.reponame)return!1;var b=a.classname,d="https://api.github.com/repos/"+a.username+"/"+a.reponame,e="",f=c.getData(d,c.getRepoProfileHTML);e=f,c.renderContent(e,b)},a.orgProfile=function(a){if(!a.orgname||!a.classname)return!1;var b=a.classname,d="https://api.github.com/orgs/"+a.orgname;parentCnt="";var e=c.getData(d,c.getOrgProfileHTML);parentCnt=e,c.renderContent(parentCnt,b)},a.userActivity=function(a){if(!a.username||!a.classname)return!1;var b,d=a.classname,e="https://api.github.com/users/"+a.username,f=e+"/events",g="",h="",i="",h=c.getData(e,c.getUserProfileHTML);c.activityLimit="undefined"!==a.limit&&c.checkInteger(b=parseInt(a.limit,10))?b>30?30:b:30;var i=c.getData(f,c.getPublicActivityHTML);g=h+i,c.renderContent(g,d)},a.repoActivity=function(a){if(!a.username||!a.classname||!a.reponame)return!1;var b,d=a.classname,e="https://api.github.com/repos/"+a.username+"/"+a.reponame,f="https://api.github.com/repos/"+a.username+"/"+a.reponame+"/events",g="",h="",i=c.getData(e,c.getRepoProfileHTML);c.activityLimit="undefined"!==a.limit&&c.checkInteger(b=parseInt(a.limit,10))?b>30?30:b:30;var h=c.getData(f,c.getPublicActivityHTML);g=i+h,c.renderContent(g,d)},a.orgActivity=function(a){if(!a.orgname||!a.classname)return!1;var b=a.classname,d="https://api.github.com/orgs/"+a.orgname,e="https://api.github.com/orgs/"+a.orgname+"/events";parentCnt="";var f,g=c.getData(d,c.getOrgProfileHTML);c.activityLimit="undefined"!==a.limit&&c.checkInteger(f=parseInt(a.limit,10))?f>30?30:f:30;var h=c.getData(e,c.getPublicActivityHTML);parentCnt=g+h,c.renderContent(parentCnt,b)},a}();